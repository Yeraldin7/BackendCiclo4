type Query {
    hola: String!
    usuarios: [Usuario!]
    roles: [Rol!]
    proyectos: [Proyecto!]
    estadoUsuarios: [EstadoUsuario!]
    estadoProyectos: [EstadoProyecto!]
    fases: [Fase!]
    inscripciones: [Inscripcion!]
    avances: [Avance!]
    estadoInscripciones: [EstadoInscripcion!]

    productos: [Producto!]
    personas: [Person!]
    allPersons(last:Int):[Person!]
    allPost(last:Int):[Post!]
}

type Mutation{
    createRol(nombre: String!):Rol
    createEstadoUsuario(nombre: String!):EstadoUsuario
    createEstadoProyecto(nombre: String!):EstadoProyecto
    createFase(nombre: String!):Fase
    createAvance(descripcion: String!, observacion: String!, idProyecto: String!,fecha: String!):Avance
    createEstadoInscripcion(nombre: String!):EstadoInscripcion
    createUsuario(nombreCompleto: String!, identificacion: String!, correo: String!, contrasena: String!, rolId: String!, estadoId: String!):Usuario


    createProducto(nombre: String!, descrip: String!, almacen: String!):Producto
    createPerson(name:String!, age: String!): Person!
    updatePerson(id:ID!, name:String!, age: Int!): Person!
    deletePerson(id:ID!): Person!
    createPost(title:String!, autor:String!): Post!
    updatePost(id:ID!, title:String!): Post!
    deletePost(id:ID!): Post!
}

type Producto {
    _id: ID!
    nombre: String!
    descrip: String!
    almacen: String!
}

type Person {
    _id: ID!
    name: String!
    age: Int!
    posts: [Post]
}
type Post {
    _id: ID!
    title: String!
    autor: Person!

}


type Usuario {
    _id: ID!
    nombreCompleto: String!
    identificacion: String!
    correo: String!
    contrasena: String!
    rol: Rol!
    estado: EstadoUsuario!
    proyectos: [Proyecto]
}

type Rol {
    _id: ID!
    nombre: String!
}

type Proyecto {
    _id: ID!
    nombre: String!
    objetivoGeneral: String!
    objetivoEspecifico: String!
    presupuesto: Float!
    fechaInicio: String!
    fechaTerminacion: String!
    aprobado: Boolean!
    estado: EstadoProyecto!
    fase: Fase
    avances: [Avance]
    documentoLider: String!
    nombreLider: String!
}

type EstadoUsuario {
    _id: ID!
    nombre: String!
}

type EstadoProyecto {
    _id: ID!
    nombre: String!
}

type Fase {
    _id: ID!
    nombre: String!
}

type Inscripcion {
    _id: ID!
    lider: Usuario!
    estudiante: Usuario!
    proyecto: Proyecto!
    aceptado: Boolean!
    fechaIngreso: String!
    fechaEgreso: String!
    estado: EstadoInscripcion!
}

type Avance {
    _id: ID!
    descripcion: String!
    observacion: String!
    idProyecto: String!
    fecha: String!
}

type EstadoInscripcion {
    _id: ID!
    nombre: String!
}


type Subscription{
    newPerson:Person!
    updatePerson:Person!
    deletePerson:Person!
    newPost:Post!
    updatePost:Post!
    deletePost:Post!
}